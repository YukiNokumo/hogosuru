revoir les events xmlhttprequest

func (e Element) OnTouchWheel(handler func(e event.Event)) error {

	return e.AddEventListener("wheel", handler)
}


router :
https://joakim.beng.se/blog/posts/a-javascript-router-in-20-lines.html
https://krasimirtsonev.com/blog/article/A-modern-JavaScript-router-in-100-lines-history-api-pushState-hash-url


"most routing libraries [...] use(s) the hash instead of the query string or path"
It was necessary in single page applications, before HTML5's push state API, and is still needed if we want to support some older browsers (IE, I am looking at you!). Before that API, changing anything before the hash would trigger a reload of the page by the browser.

"hashes do not survive login redirects"
At work, I think they solved this by encoding the part after the hash, and transmitting it with the login request. Thus, the server can recreate the exact URL to redirect to.


https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onhashchange

onpopstate:

The following example assigns a listener to the onpopstate property.`


https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers



le onload va prendre en parametre .. et return une promise qui retournera tous les nodes

Un template GO sera envoyé au front qui sera peuple sur le front avec des data envoyé par xmlhttprequest
Le resultat sera ensuite retourné par la methode onload




unit test : Lorca???